>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# Validating the integer_validator method with non-integer inputs
>>> bg.integer_validator("my_string", "abc")
Traceback (most recent call last):
    ...
TypeError: my_string must be an integer

>>> bg.integer_validator("my_float", 3.14)
Traceback (most recent call last):
    ...
TypeError: my_float must be an integer

>>> bg.integer_validator("my_list", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: my_list must be an integer

>>> bg.integer_validator("my_dict", {"key": "value"})
Traceback (most recent call last):
    ...
TypeError: my_dict must be an integer

# Validating the integer_validator method with zero and negative integers
>>> bg.integer_validator("zero_value", 0)
Traceback (most recent call last):
    ...
ValueError: zero_value must be greater than 0

>>> bg.integer_validator("negative_value", -10)
Traceback (most recent call last):
    ...
ValueError: negative_value must be greater than 0

# Calling the area method, expecting an Exception
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Validating the integer_validator method with valid integers
>>> bg.integer_validator("valid_integer", 10)

>>> bg.integer_validator("valid_integer_large", 1000)
